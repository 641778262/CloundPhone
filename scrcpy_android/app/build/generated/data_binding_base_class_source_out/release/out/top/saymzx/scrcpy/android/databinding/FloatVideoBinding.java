// Generated by view binder compiler. Do not edit!
package top.saymzx.scrcpy.android.databinding;

import android.view.LayoutInflater;
import android.view.SurfaceView;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import top.saymzx.scrcpy.android.R;

public final class FloatVideoBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout floatVideo;

  @NonNull
  public final ImageView floatVideoBack;

  @NonNull
  public final LinearLayout floatVideoBar;

  @NonNull
  public final TextView floatVideoFps;

  @NonNull
  public final ImageView floatVideoFullscreen;

  @NonNull
  public final ImageView floatVideoHome;

  @NonNull
  public final ImageView floatVideoSetSize;

  @NonNull
  public final ImageView floatVideoStop;

  @NonNull
  public final SurfaceView floatVideoSurface;

  @NonNull
  public final ImageView floatVideoSwitch;

  @NonNull
  public final LinearLayout floatVideoTitle1;

  @NonNull
  public final LinearLayout floatVideoTitle2;

  private FloatVideoBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout floatVideo, @NonNull ImageView floatVideoBack,
      @NonNull LinearLayout floatVideoBar, @NonNull TextView floatVideoFps,
      @NonNull ImageView floatVideoFullscreen, @NonNull ImageView floatVideoHome,
      @NonNull ImageView floatVideoSetSize, @NonNull ImageView floatVideoStop,
      @NonNull SurfaceView floatVideoSurface, @NonNull ImageView floatVideoSwitch,
      @NonNull LinearLayout floatVideoTitle1, @NonNull LinearLayout floatVideoTitle2) {
    this.rootView = rootView;
    this.floatVideo = floatVideo;
    this.floatVideoBack = floatVideoBack;
    this.floatVideoBar = floatVideoBar;
    this.floatVideoFps = floatVideoFps;
    this.floatVideoFullscreen = floatVideoFullscreen;
    this.floatVideoHome = floatVideoHome;
    this.floatVideoSetSize = floatVideoSetSize;
    this.floatVideoStop = floatVideoStop;
    this.floatVideoSurface = floatVideoSurface;
    this.floatVideoSwitch = floatVideoSwitch;
    this.floatVideoTitle1 = floatVideoTitle1;
    this.floatVideoTitle2 = floatVideoTitle2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FloatVideoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FloatVideoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.float_video, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FloatVideoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout floatVideo = (ConstraintLayout) rootView;

      id = R.id.float_video_back;
      ImageView floatVideoBack = ViewBindings.findChildViewById(rootView, id);
      if (floatVideoBack == null) {
        break missingId;
      }

      id = R.id.float_video_bar;
      LinearLayout floatVideoBar = ViewBindings.findChildViewById(rootView, id);
      if (floatVideoBar == null) {
        break missingId;
      }

      id = R.id.float_video_fps;
      TextView floatVideoFps = ViewBindings.findChildViewById(rootView, id);
      if (floatVideoFps == null) {
        break missingId;
      }

      id = R.id.float_video_fullscreen;
      ImageView floatVideoFullscreen = ViewBindings.findChildViewById(rootView, id);
      if (floatVideoFullscreen == null) {
        break missingId;
      }

      id = R.id.float_video_home;
      ImageView floatVideoHome = ViewBindings.findChildViewById(rootView, id);
      if (floatVideoHome == null) {
        break missingId;
      }

      id = R.id.float_video_set_size;
      ImageView floatVideoSetSize = ViewBindings.findChildViewById(rootView, id);
      if (floatVideoSetSize == null) {
        break missingId;
      }

      id = R.id.float_video_stop;
      ImageView floatVideoStop = ViewBindings.findChildViewById(rootView, id);
      if (floatVideoStop == null) {
        break missingId;
      }

      id = R.id.float_video_surface;
      SurfaceView floatVideoSurface = ViewBindings.findChildViewById(rootView, id);
      if (floatVideoSurface == null) {
        break missingId;
      }

      id = R.id.float_video_switch;
      ImageView floatVideoSwitch = ViewBindings.findChildViewById(rootView, id);
      if (floatVideoSwitch == null) {
        break missingId;
      }

      id = R.id.float_video_title1;
      LinearLayout floatVideoTitle1 = ViewBindings.findChildViewById(rootView, id);
      if (floatVideoTitle1 == null) {
        break missingId;
      }

      id = R.id.float_video_title2;
      LinearLayout floatVideoTitle2 = ViewBindings.findChildViewById(rootView, id);
      if (floatVideoTitle2 == null) {
        break missingId;
      }

      return new FloatVideoBinding((ConstraintLayout) rootView, floatVideo, floatVideoBack,
          floatVideoBar, floatVideoFps, floatVideoFullscreen, floatVideoHome, floatVideoSetSize,
          floatVideoStop, floatVideoSurface, floatVideoSwitch, floatVideoTitle1, floatVideoTitle2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
